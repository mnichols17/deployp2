{"version":3,"sources":["Components/TaskBoard.js","Components/AddTask.js","Components/App.js","index.js"],"names":["TaskBoard","state","mobile","view","componentDidMount","window","addEventListener","handleResize","setState","innerWidth","handleView","event","parseInt","target","value","moveCardText","status","id","href","onClick","subStatus","addStatus","renderCard","task","className","key","title","type","newList","props","tasks","index","findIndex","updateTaskList","this","htmlFor","onChange","map","React","Component","AddTask","handleChange","name","addToTasks","preventDefault","push","length","history","App","axios","get","then","res","data","catch","error","console","log","newTasks","to","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4007b38b.chunk.js","sourcesContent":["import React from 'react';\n\nclass TaskBoard extends React.Component {\n\n    state = {\n        mobile: false,\n        view: 0\n    }\n\n    componentDidMount = () => {\n        window.addEventListener('resize', this.handleResize);\n        this.handleResize();\n    }\n\n    handleResize = () => {\n        this.setState({\n            mobile: window.innerWidth < 750 \n        })\n    }\n\n    handleView = (event) => {\n        this.setState({\n            view: parseInt(event.target.value)\n        })\n    }\n\n    moveCardText = (status, id) => {\n        switch(status){\n            case(1):\n                return <div>\n                    <a href=\"#\" onClick={this.subStatus} id={id}>&lt;&lt; Send Back</a>\n                    <br />\n                    <a href=\"#\" onClick={this.addStatus} id={id}>Request Review &gt;&gt;</a>\n                </div>\n            case(2):\n                return <div>\n                    <a href=\"#\" onClick={this.subStatus} id={id}>&lt;&lt; More Work Required</a>\n                    <br />\n                    <a href=\"#\" onClick={this.addStatus} id={id}>Mark Done &gt;&gt;</a>\n                </div>\n            case(3):\n                return <div>\n                    <a href=\"#\" onClick={this.subStatus} id={id}>&lt;&lt; Request Re-Review</a>\n                </div>\n            default:\n                return <div>\n                    <a href=\"#\" onClick={this.addStatus} id={id}>Start Work &gt;&gt;</a>\n                </div>\n        }\n    }\n\n    renderCard = (task, status) => {\n        return task.status === status ? \n        <div className=\"card my-2 mx-auto\" key={task.id}>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{task.title}</h5>\n                <h6 className=\"card-subtitle mb-2 text-muted\">ID: {task.id}</h6>\n                <h6 className=\"card-subtitle mb-2 text-muted\">Type: {task.type}</h6>\n                {this.moveCardText(task.status, task.id)}\n            </div>\n        </div> : null\n    }\n\n    addStatus = (event) => {\n        let newList = this.props.tasks;\n        let index = this.props.tasks.findIndex(task => task.id === parseInt(event.target.id))\n        newList[index].status = this.props.tasks[index].status !== 3 ? this.props.tasks[index].status + 1 : this.props.tasks[index].status\n        this.props.updateTaskList(newList)\n    }\n\n    subStatus = (event) => {\n        let newList = this.props.tasks;\n        let index = this.props.tasks.findIndex(task => task.id === parseInt(event.target.id))\n        newList[index].status = this.props.tasks[index].status !== 0 ? this.props.tasks[index].status - 1 : this.props.tasks[index].status\n        this.props.updateTaskList(newList)\n    }\n\n    render() {\n        return ( this.state.mobile ? \n            <div>\n                <label htmlFor=\"view\">Choose a column to view:</label>\n                <select onChange={this.handleView} className=\"form-control\" id=\"view\">\n                    <option value=\"0\">To Do</option>\n                    <option value=\"1\">In Progress</option>\n                    <option value=\"2\">Review</option>\n                    <option value=\"3\">Done</option>\n                </select>\n                <div className=\"container-fluid mt-2\" id=\"taskBoard\">\n                    {this.props.tasks.map(task => this.renderCard(task, this.state.view))}\n                </div>\n            </div> \n            :\n            <div className=\"container-fluid\" id=\"taskBoard\">\n                <div className=\"row\">\n                    <div className=\"col\" id=\"col0\">\n                        <h2 className=\"mt-1\">To Do</h2>\n                        {this.props.tasks.map(task => this.renderCard(task, 0))}\n                    </div>\n                    <div className=\"col\" id=\"col1\">\n                        <h2 className=\"mt-1\">In Progress</h2>\n                        {this.props.tasks.map(task => this.renderCard(task, 1))}\n                    </div>\n                    <div className=\"col\" id=\"col2\">\n                        <h2 className=\"mt-1\">Review</h2>\n                        {this.props.tasks.map(task => this.renderCard(task, 2))}\n                    </div>\n                    <div className=\"col\" id=\"col3\">\n                        <h2 className=\"mt-1\">Done</h2>\n                        {this.props.tasks.map(task => this.renderCard(task, 3))}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TaskBoard;","import React from 'react';\n\nclass AddTask extends React.Component {\n\n    state = {\n        title: \"\",\n        type: \"\"\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    addToTasks = (event) => {\n        event.preventDefault()\n        let newList = this.props.tasks;\n        newList.push({\"id\": newList.length + 1, \"title\": this.state.title, \"type\": this.state.type, status: 0})\n        this.props.history.push(\"/\");\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\" id=\"addTask\">\n                <form>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"title\">Title:</label>\n                        <input onChange={this.handleChange} type=\"text\" className=\"form-control\" name=\"title\" id=\"title\" />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"type\">Type:</label>\n                        <select onChange={this.handleChange} className=\"form-control\" name=\"type\" id=\"type\">\n                            <option value=\"Task\">Task</option>\n                            <option value=\"Feature\">Feature</option>\n                            <option value=\"Bug\">Bug</option>\n                        </select>\n                    </div>\n                    <button onClick={this.addToTasks} type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddTask","import React from 'react';\nimport { Link, BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport axios from 'axios';\n\nimport TaskBoard from './TaskBoard';\nimport AddTask from './AddTask';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      tasks: []\n    }\n  }\n\n  componentDidMount = () => {\n    axios.get(\"https://my-json-server.typicode.com/mnichols17/project2/tasks\")\n    .then(res => {\n        this.setState({\n          tasks: res.data\n        })\n      })\n    .catch(error => console.log(error))\n  }\n\n  updateTaskList = (newTasks) => {\n      this.setState({\n          tasks: newTasks\n      })\n  }\n\n  render(){\n    return (\n      <div className=\"container-fluid\" id=\"view\">\n        <Router>\n            <nav className=\"mt-3 ml-5\">\n                <Link className=\"navLink\" to=\"/\">Task Board</Link>\n                <Link className=\"navLink\" to=\"/addtask\">Add Task</Link>\n            </nav>\n            <div className=\"mt-3\">\n            <Switch>\n                <Route exact path=\"/\" render={(props) => (<TaskBoard tasks={this.state.tasks} updateTaskList={this.updateTaskList} {...props}/>)} />\n                <Route path=\"/addtask\" render={(props) => (<AddTask tasks={this.state.tasks} updateTaskList={this.updateTaskList} {...props}/>)} />\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}